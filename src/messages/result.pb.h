// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: result.proto

#ifndef PROTOBUF_result_2eproto__INCLUDED
#define PROTOBUF_result_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace networkSpiceMessages {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_result_2eproto();
void protobuf_InitDefaults_result_2eproto();
void protobuf_AssignDesc_result_2eproto();
void protobuf_ShutdownFile_result_2eproto();

class FrequencyPoint;
class Results;
class TransientPoint;

// ===================================================================

class FrequencyPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:networkSpiceMessages.FrequencyPoint) */ {
 public:
  FrequencyPoint();
  virtual ~FrequencyPoint();

  FrequencyPoint(const FrequencyPoint& from);

  inline FrequencyPoint& operator=(const FrequencyPoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrequencyPoint& default_instance();

  static const FrequencyPoint* internal_default_instance();

  void Swap(FrequencyPoint* other);

  // implements Message ----------------------------------------------

  inline FrequencyPoint* New() const { return New(NULL); }

  FrequencyPoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FrequencyPoint& from);
  void MergeFrom(const FrequencyPoint& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FrequencyPoint* other);
  void UnsafeMergeFrom(const FrequencyPoint& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double frequency = 1;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 1;
  double frequency() const;
  void set_frequency(double value);

  // optional double magnitude = 2;
  void clear_magnitude();
  static const int kMagnitudeFieldNumber = 2;
  double magnitude() const;
  void set_magnitude(double value);

  // optional double phase = 3;
  void clear_phase();
  static const int kPhaseFieldNumber = 3;
  double phase() const;
  void set_phase(double value);

  // @@protoc_insertion_point(class_scope:networkSpiceMessages.FrequencyPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double frequency_;
  double magnitude_;
  double phase_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_result_2eproto_impl();
  friend void  protobuf_AddDesc_result_2eproto_impl();
  friend void protobuf_AssignDesc_result_2eproto();
  friend void protobuf_ShutdownFile_result_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FrequencyPoint> FrequencyPoint_default_instance_;

// -------------------------------------------------------------------

class TransientPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:networkSpiceMessages.TransientPoint) */ {
 public:
  TransientPoint();
  virtual ~TransientPoint();

  TransientPoint(const TransientPoint& from);

  inline TransientPoint& operator=(const TransientPoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransientPoint& default_instance();

  static const TransientPoint* internal_default_instance();

  void Swap(TransientPoint* other);

  // implements Message ----------------------------------------------

  inline TransientPoint* New() const { return New(NULL); }

  TransientPoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransientPoint& from);
  void MergeFrom(const TransientPoint& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransientPoint* other);
  void UnsafeMergeFrom(const TransientPoint& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  double time() const;
  void set_time(double value);

  // optional double value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:networkSpiceMessages.TransientPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double time_;
  double value_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_result_2eproto_impl();
  friend void  protobuf_AddDesc_result_2eproto_impl();
  friend void protobuf_AssignDesc_result_2eproto();
  friend void protobuf_ShutdownFile_result_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TransientPoint> TransientPoint_default_instance_;

// -------------------------------------------------------------------

class Results : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:networkSpiceMessages.Results) */ {
 public:
  Results();
  virtual ~Results();

  Results(const Results& from);

  inline Results& operator=(const Results& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Results& default_instance();

  static const Results* internal_default_instance();

  void Swap(Results* other);

  // implements Message ----------------------------------------------

  inline Results* New() const { return New(NULL); }

  Results* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Results& from);
  void MergeFrom(const Results& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Results* other);
  void UnsafeMergeFrom(const Results& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .networkSpiceMessages.TransientPoint transientPoint = 1;
  int transientpoint_size() const;
  void clear_transientpoint();
  static const int kTransientPointFieldNumber = 1;
  const ::networkSpiceMessages::TransientPoint& transientpoint(int index) const;
  ::networkSpiceMessages::TransientPoint* mutable_transientpoint(int index);
  ::networkSpiceMessages::TransientPoint* add_transientpoint();
  ::google::protobuf::RepeatedPtrField< ::networkSpiceMessages::TransientPoint >*
      mutable_transientpoint();
  const ::google::protobuf::RepeatedPtrField< ::networkSpiceMessages::TransientPoint >&
      transientpoint() const;

  // repeated .networkSpiceMessages.FrequencyPoint frequencyPoint = 2;
  int frequencypoint_size() const;
  void clear_frequencypoint();
  static const int kFrequencyPointFieldNumber = 2;
  const ::networkSpiceMessages::FrequencyPoint& frequencypoint(int index) const;
  ::networkSpiceMessages::FrequencyPoint* mutable_frequencypoint(int index);
  ::networkSpiceMessages::FrequencyPoint* add_frequencypoint();
  ::google::protobuf::RepeatedPtrField< ::networkSpiceMessages::FrequencyPoint >*
      mutable_frequencypoint();
  const ::google::protobuf::RepeatedPtrField< ::networkSpiceMessages::FrequencyPoint >&
      frequencypoint() const;

  // @@protoc_insertion_point(class_scope:networkSpiceMessages.Results)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::networkSpiceMessages::TransientPoint > transientpoint_;
  ::google::protobuf::RepeatedPtrField< ::networkSpiceMessages::FrequencyPoint > frequencypoint_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_result_2eproto_impl();
  friend void  protobuf_AddDesc_result_2eproto_impl();
  friend void protobuf_AssignDesc_result_2eproto();
  friend void protobuf_ShutdownFile_result_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Results> Results_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FrequencyPoint

// optional double frequency = 1;
inline void FrequencyPoint::clear_frequency() {
  frequency_ = 0;
}
inline double FrequencyPoint::frequency() const {
  // @@protoc_insertion_point(field_get:networkSpiceMessages.FrequencyPoint.frequency)
  return frequency_;
}
inline void FrequencyPoint::set_frequency(double value) {
  
  frequency_ = value;
  // @@protoc_insertion_point(field_set:networkSpiceMessages.FrequencyPoint.frequency)
}

// optional double magnitude = 2;
inline void FrequencyPoint::clear_magnitude() {
  magnitude_ = 0;
}
inline double FrequencyPoint::magnitude() const {
  // @@protoc_insertion_point(field_get:networkSpiceMessages.FrequencyPoint.magnitude)
  return magnitude_;
}
inline void FrequencyPoint::set_magnitude(double value) {
  
  magnitude_ = value;
  // @@protoc_insertion_point(field_set:networkSpiceMessages.FrequencyPoint.magnitude)
}

// optional double phase = 3;
inline void FrequencyPoint::clear_phase() {
  phase_ = 0;
}
inline double FrequencyPoint::phase() const {
  // @@protoc_insertion_point(field_get:networkSpiceMessages.FrequencyPoint.phase)
  return phase_;
}
inline void FrequencyPoint::set_phase(double value) {
  
  phase_ = value;
  // @@protoc_insertion_point(field_set:networkSpiceMessages.FrequencyPoint.phase)
}

inline const FrequencyPoint* FrequencyPoint::internal_default_instance() {
  return &FrequencyPoint_default_instance_.get();
}
// -------------------------------------------------------------------

// TransientPoint

// optional double time = 1;
inline void TransientPoint::clear_time() {
  time_ = 0;
}
inline double TransientPoint::time() const {
  // @@protoc_insertion_point(field_get:networkSpiceMessages.TransientPoint.time)
  return time_;
}
inline void TransientPoint::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:networkSpiceMessages.TransientPoint.time)
}

// optional double value = 2;
inline void TransientPoint::clear_value() {
  value_ = 0;
}
inline double TransientPoint::value() const {
  // @@protoc_insertion_point(field_get:networkSpiceMessages.TransientPoint.value)
  return value_;
}
inline void TransientPoint::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:networkSpiceMessages.TransientPoint.value)
}

inline const TransientPoint* TransientPoint::internal_default_instance() {
  return &TransientPoint_default_instance_.get();
}
// -------------------------------------------------------------------

// Results

// repeated .networkSpiceMessages.TransientPoint transientPoint = 1;
inline int Results::transientpoint_size() const {
  return transientpoint_.size();
}
inline void Results::clear_transientpoint() {
  transientpoint_.Clear();
}
inline const ::networkSpiceMessages::TransientPoint& Results::transientpoint(int index) const {
  // @@protoc_insertion_point(field_get:networkSpiceMessages.Results.transientPoint)
  return transientpoint_.Get(index);
}
inline ::networkSpiceMessages::TransientPoint* Results::mutable_transientpoint(int index) {
  // @@protoc_insertion_point(field_mutable:networkSpiceMessages.Results.transientPoint)
  return transientpoint_.Mutable(index);
}
inline ::networkSpiceMessages::TransientPoint* Results::add_transientpoint() {
  // @@protoc_insertion_point(field_add:networkSpiceMessages.Results.transientPoint)
  return transientpoint_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::networkSpiceMessages::TransientPoint >*
Results::mutable_transientpoint() {
  // @@protoc_insertion_point(field_mutable_list:networkSpiceMessages.Results.transientPoint)
  return &transientpoint_;
}
inline const ::google::protobuf::RepeatedPtrField< ::networkSpiceMessages::TransientPoint >&
Results::transientpoint() const {
  // @@protoc_insertion_point(field_list:networkSpiceMessages.Results.transientPoint)
  return transientpoint_;
}

// repeated .networkSpiceMessages.FrequencyPoint frequencyPoint = 2;
inline int Results::frequencypoint_size() const {
  return frequencypoint_.size();
}
inline void Results::clear_frequencypoint() {
  frequencypoint_.Clear();
}
inline const ::networkSpiceMessages::FrequencyPoint& Results::frequencypoint(int index) const {
  // @@protoc_insertion_point(field_get:networkSpiceMessages.Results.frequencyPoint)
  return frequencypoint_.Get(index);
}
inline ::networkSpiceMessages::FrequencyPoint* Results::mutable_frequencypoint(int index) {
  // @@protoc_insertion_point(field_mutable:networkSpiceMessages.Results.frequencyPoint)
  return frequencypoint_.Mutable(index);
}
inline ::networkSpiceMessages::FrequencyPoint* Results::add_frequencypoint() {
  // @@protoc_insertion_point(field_add:networkSpiceMessages.Results.frequencyPoint)
  return frequencypoint_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::networkSpiceMessages::FrequencyPoint >*
Results::mutable_frequencypoint() {
  // @@protoc_insertion_point(field_mutable_list:networkSpiceMessages.Results.frequencyPoint)
  return &frequencypoint_;
}
inline const ::google::protobuf::RepeatedPtrField< ::networkSpiceMessages::FrequencyPoint >&
Results::frequencypoint() const {
  // @@protoc_insertion_point(field_list:networkSpiceMessages.Results.frequencyPoint)
  return frequencypoint_;
}

inline const Results* Results::internal_default_instance() {
  return &Results_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace networkSpiceMessages

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_result_2eproto__INCLUDED
