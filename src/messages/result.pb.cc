// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: result.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "result.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* FrequencyPoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrequencyPoint_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransientPoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransientPoint_reflection_ = NULL;
const ::google::protobuf::Descriptor* Results_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Results_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_result_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_result_2eproto() {
  protobuf_AddDesc_result_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "result.proto");
  GOOGLE_CHECK(file != NULL);
  FrequencyPoint_descriptor_ = file->message_type(0);
  static const int FrequencyPoint_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrequencyPoint, frequency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrequencyPoint, magnitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrequencyPoint, phase_),
  };
  FrequencyPoint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrequencyPoint_descriptor_,
      FrequencyPoint::internal_default_instance(),
      FrequencyPoint_offsets_,
      -1,
      -1,
      -1,
      sizeof(FrequencyPoint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrequencyPoint, _internal_metadata_));
  TransientPoint_descriptor_ = file->message_type(1);
  static const int TransientPoint_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransientPoint, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransientPoint, value_),
  };
  TransientPoint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransientPoint_descriptor_,
      TransientPoint::internal_default_instance(),
      TransientPoint_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransientPoint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransientPoint, _internal_metadata_));
  Results_descriptor_ = file->message_type(2);
  static const int Results_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, transientpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, frequencypoint_),
  };
  Results_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Results_descriptor_,
      Results::internal_default_instance(),
      Results_offsets_,
      -1,
      -1,
      -1,
      sizeof(Results),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_result_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrequencyPoint_descriptor_, FrequencyPoint::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransientPoint_descriptor_, TransientPoint::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Results_descriptor_, Results::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_result_2eproto() {
  FrequencyPoint_default_instance_.Shutdown();
  delete FrequencyPoint_reflection_;
  TransientPoint_default_instance_.Shutdown();
  delete TransientPoint_reflection_;
  Results_default_instance_.Shutdown();
  delete Results_reflection_;
}

void protobuf_InitDefaults_result_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  FrequencyPoint_default_instance_.DefaultConstruct();
  TransientPoint_default_instance_.DefaultConstruct();
  Results_default_instance_.DefaultConstruct();
  FrequencyPoint_default_instance_.get_mutable()->InitAsDefaultInstance();
  TransientPoint_default_instance_.get_mutable()->InitAsDefaultInstance();
  Results_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_result_2eproto_once_);
void protobuf_InitDefaults_result_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_result_2eproto_once_,
                 &protobuf_InitDefaults_result_2eproto_impl);
}
void protobuf_AddDesc_result_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_result_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014result.proto\"E\n\016FrequencyPoint\022\021\n\tfreq"
    "uency\030\001 \001(\001\022\021\n\tmagnitude\030\002 \001(\001\022\r\n\005phase\030"
    "\003 \001(\001\"-\n\016TransientPoint\022\014\n\004time\030\001 \001(\001\022\r\n"
    "\005value\030\002 \001(\001\"[\n\007Results\022\'\n\016transientPoin"
    "t\030\001 \003(\0132\017.TransientPoint\022\'\n\016frequencyPoi"
    "nt\030\002 \003(\0132\017.FrequencyPointb\006proto3", 233);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "result.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_result_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_result_2eproto_once_);
void protobuf_AddDesc_result_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_result_2eproto_once_,
                 &protobuf_AddDesc_result_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_result_2eproto {
  StaticDescriptorInitializer_result_2eproto() {
    protobuf_AddDesc_result_2eproto();
  }
} static_descriptor_initializer_result_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrequencyPoint::kFrequencyFieldNumber;
const int FrequencyPoint::kMagnitudeFieldNumber;
const int FrequencyPoint::kPhaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrequencyPoint::FrequencyPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_result_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:FrequencyPoint)
}

void FrequencyPoint::InitAsDefaultInstance() {
}

FrequencyPoint::FrequencyPoint(const FrequencyPoint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FrequencyPoint)
}

void FrequencyPoint::SharedCtor() {
  ::memset(&frequency_, 0, reinterpret_cast<char*>(&phase_) -
    reinterpret_cast<char*>(&frequency_) + sizeof(phase_));
  _cached_size_ = 0;
}

FrequencyPoint::~FrequencyPoint() {
  // @@protoc_insertion_point(destructor:FrequencyPoint)
  SharedDtor();
}

void FrequencyPoint::SharedDtor() {
}

void FrequencyPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrequencyPoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrequencyPoint_descriptor_;
}

const FrequencyPoint& FrequencyPoint::default_instance() {
  protobuf_InitDefaults_result_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrequencyPoint> FrequencyPoint_default_instance_;

FrequencyPoint* FrequencyPoint::New(::google::protobuf::Arena* arena) const {
  FrequencyPoint* n = new FrequencyPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrequencyPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:FrequencyPoint)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FrequencyPoint, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FrequencyPoint*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(frequency_, phase_);

#undef ZR_HELPER_
#undef ZR_

}

bool FrequencyPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FrequencyPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double frequency = 1;
      case 1: {
        if (tag == 9) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_magnitude;
        break;
      }

      // optional double magnitude = 2;
      case 2: {
        if (tag == 17) {
         parse_magnitude:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &magnitude_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_phase;
        break;
      }

      // optional double phase = 3;
      case 3: {
        if (tag == 25) {
         parse_phase:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phase_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FrequencyPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FrequencyPoint)
  return false;
#undef DO_
}

void FrequencyPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FrequencyPoint)
  // optional double frequency = 1;
  if (this->frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->frequency(), output);
  }

  // optional double magnitude = 2;
  if (this->magnitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->magnitude(), output);
  }

  // optional double phase = 3;
  if (this->phase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->phase(), output);
  }

  // @@protoc_insertion_point(serialize_end:FrequencyPoint)
}

::google::protobuf::uint8* FrequencyPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FrequencyPoint)
  // optional double frequency = 1;
  if (this->frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->frequency(), target);
  }

  // optional double magnitude = 2;
  if (this->magnitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->magnitude(), target);
  }

  // optional double phase = 3;
  if (this->phase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->phase(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:FrequencyPoint)
  return target;
}

size_t FrequencyPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FrequencyPoint)
  size_t total_size = 0;

  // optional double frequency = 1;
  if (this->frequency() != 0) {
    total_size += 1 + 8;
  }

  // optional double magnitude = 2;
  if (this->magnitude() != 0) {
    total_size += 1 + 8;
  }

  // optional double phase = 3;
  if (this->phase() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrequencyPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FrequencyPoint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrequencyPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrequencyPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FrequencyPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FrequencyPoint)
    UnsafeMergeFrom(*source);
  }
}

void FrequencyPoint::MergeFrom(const FrequencyPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FrequencyPoint)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrequencyPoint::UnsafeMergeFrom(const FrequencyPoint& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.frequency() != 0) {
    set_frequency(from.frequency());
  }
  if (from.magnitude() != 0) {
    set_magnitude(from.magnitude());
  }
  if (from.phase() != 0) {
    set_phase(from.phase());
  }
}

void FrequencyPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FrequencyPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrequencyPoint::CopyFrom(const FrequencyPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FrequencyPoint)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrequencyPoint::IsInitialized() const {

  return true;
}

void FrequencyPoint::Swap(FrequencyPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrequencyPoint::InternalSwap(FrequencyPoint* other) {
  std::swap(frequency_, other->frequency_);
  std::swap(magnitude_, other->magnitude_);
  std::swap(phase_, other->phase_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrequencyPoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrequencyPoint_descriptor_;
  metadata.reflection = FrequencyPoint_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrequencyPoint

// optional double frequency = 1;
void FrequencyPoint::clear_frequency() {
  frequency_ = 0;
}
double FrequencyPoint::frequency() const {
  // @@protoc_insertion_point(field_get:FrequencyPoint.frequency)
  return frequency_;
}
void FrequencyPoint::set_frequency(double value) {
  
  frequency_ = value;
  // @@protoc_insertion_point(field_set:FrequencyPoint.frequency)
}

// optional double magnitude = 2;
void FrequencyPoint::clear_magnitude() {
  magnitude_ = 0;
}
double FrequencyPoint::magnitude() const {
  // @@protoc_insertion_point(field_get:FrequencyPoint.magnitude)
  return magnitude_;
}
void FrequencyPoint::set_magnitude(double value) {
  
  magnitude_ = value;
  // @@protoc_insertion_point(field_set:FrequencyPoint.magnitude)
}

// optional double phase = 3;
void FrequencyPoint::clear_phase() {
  phase_ = 0;
}
double FrequencyPoint::phase() const {
  // @@protoc_insertion_point(field_get:FrequencyPoint.phase)
  return phase_;
}
void FrequencyPoint::set_phase(double value) {
  
  phase_ = value;
  // @@protoc_insertion_point(field_set:FrequencyPoint.phase)
}

inline const FrequencyPoint* FrequencyPoint::internal_default_instance() {
  return &FrequencyPoint_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransientPoint::kTimeFieldNumber;
const int TransientPoint::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransientPoint::TransientPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_result_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransientPoint)
}

void TransientPoint::InitAsDefaultInstance() {
}

TransientPoint::TransientPoint(const TransientPoint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TransientPoint)
}

void TransientPoint::SharedCtor() {
  ::memset(&time_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&time_) + sizeof(value_));
  _cached_size_ = 0;
}

TransientPoint::~TransientPoint() {
  // @@protoc_insertion_point(destructor:TransientPoint)
  SharedDtor();
}

void TransientPoint::SharedDtor() {
}

void TransientPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransientPoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransientPoint_descriptor_;
}

const TransientPoint& TransientPoint::default_instance() {
  protobuf_InitDefaults_result_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TransientPoint> TransientPoint_default_instance_;

TransientPoint* TransientPoint::New(::google::protobuf::Arena* arena) const {
  TransientPoint* n = new TransientPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransientPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:TransientPoint)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TransientPoint, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TransientPoint*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(time_, value_);

#undef ZR_HELPER_
#undef ZR_

}

bool TransientPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransientPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double time = 1;
      case 1: {
        if (tag == 9) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_value;
        break;
      }

      // optional double value = 2;
      case 2: {
        if (tag == 17) {
         parse_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransientPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransientPoint)
  return false;
#undef DO_
}

void TransientPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransientPoint)
  // optional double time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->time(), output);
  }

  // optional double value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:TransientPoint)
}

::google::protobuf::uint8* TransientPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransientPoint)
  // optional double time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->time(), target);
  }

  // optional double value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TransientPoint)
  return target;
}

size_t TransientPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransientPoint)
  size_t total_size = 0;

  // optional double time = 1;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  // optional double value = 2;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransientPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransientPoint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransientPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransientPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransientPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransientPoint)
    UnsafeMergeFrom(*source);
  }
}

void TransientPoint::MergeFrom(const TransientPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransientPoint)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TransientPoint::UnsafeMergeFrom(const TransientPoint& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void TransientPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransientPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransientPoint::CopyFrom(const TransientPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransientPoint)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TransientPoint::IsInitialized() const {

  return true;
}

void TransientPoint::Swap(TransientPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransientPoint::InternalSwap(TransientPoint* other) {
  std::swap(time_, other->time_);
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransientPoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransientPoint_descriptor_;
  metadata.reflection = TransientPoint_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransientPoint

// optional double time = 1;
void TransientPoint::clear_time() {
  time_ = 0;
}
double TransientPoint::time() const {
  // @@protoc_insertion_point(field_get:TransientPoint.time)
  return time_;
}
void TransientPoint::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:TransientPoint.time)
}

// optional double value = 2;
void TransientPoint::clear_value() {
  value_ = 0;
}
double TransientPoint::value() const {
  // @@protoc_insertion_point(field_get:TransientPoint.value)
  return value_;
}
void TransientPoint::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:TransientPoint.value)
}

inline const TransientPoint* TransientPoint::internal_default_instance() {
  return &TransientPoint_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Results::kTransientPointFieldNumber;
const int Results::kFrequencyPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Results::Results()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_result_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Results)
}

void Results::InitAsDefaultInstance() {
}

Results::Results(const Results& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Results)
}

void Results::SharedCtor() {
  _cached_size_ = 0;
}

Results::~Results() {
  // @@protoc_insertion_point(destructor:Results)
  SharedDtor();
}

void Results::SharedDtor() {
}

void Results::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Results::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Results_descriptor_;
}

const Results& Results::default_instance() {
  protobuf_InitDefaults_result_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Results> Results_default_instance_;

Results* Results::New(::google::protobuf::Arena* arena) const {
  Results* n = new Results;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Results::Clear() {
// @@protoc_insertion_point(message_clear_start:Results)
  transientpoint_.Clear();
  frequencypoint_.Clear();
}

bool Results::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Results)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TransientPoint transientPoint = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_transientPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_transientpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_transientPoint;
        if (input->ExpectTag(18)) goto parse_loop_frequencyPoint;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .FrequencyPoint frequencyPoint = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frequencyPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frequencypoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_frequencyPoint;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Results)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Results)
  return false;
#undef DO_
}

void Results::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Results)
  // repeated .TransientPoint transientPoint = 1;
  for (unsigned int i = 0, n = this->transientpoint_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->transientpoint(i), output);
  }

  // repeated .FrequencyPoint frequencyPoint = 2;
  for (unsigned int i = 0, n = this->frequencypoint_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->frequencypoint(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Results)
}

::google::protobuf::uint8* Results::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Results)
  // repeated .TransientPoint transientPoint = 1;
  for (unsigned int i = 0, n = this->transientpoint_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->transientpoint(i), false, target);
  }

  // repeated .FrequencyPoint frequencyPoint = 2;
  for (unsigned int i = 0, n = this->frequencypoint_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->frequencypoint(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Results)
  return target;
}

size_t Results::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Results)
  size_t total_size = 0;

  // repeated .TransientPoint transientPoint = 1;
  {
    unsigned int count = this->transientpoint_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transientpoint(i));
    }
  }

  // repeated .FrequencyPoint frequencyPoint = 2;
  {
    unsigned int count = this->frequencypoint_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frequencypoint(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Results::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Results)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Results* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Results>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Results)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Results)
    UnsafeMergeFrom(*source);
  }
}

void Results::MergeFrom(const Results& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Results)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Results::UnsafeMergeFrom(const Results& from) {
  GOOGLE_DCHECK(&from != this);
  transientpoint_.MergeFrom(from.transientpoint_);
  frequencypoint_.MergeFrom(from.frequencypoint_);
}

void Results::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Results::CopyFrom(const Results& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Results)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Results::IsInitialized() const {

  return true;
}

void Results::Swap(Results* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Results::InternalSwap(Results* other) {
  transientpoint_.UnsafeArenaSwap(&other->transientpoint_);
  frequencypoint_.UnsafeArenaSwap(&other->frequencypoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Results::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Results_descriptor_;
  metadata.reflection = Results_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Results

// repeated .TransientPoint transientPoint = 1;
int Results::transientpoint_size() const {
  return transientpoint_.size();
}
void Results::clear_transientpoint() {
  transientpoint_.Clear();
}
const ::TransientPoint& Results::transientpoint(int index) const {
  // @@protoc_insertion_point(field_get:Results.transientPoint)
  return transientpoint_.Get(index);
}
::TransientPoint* Results::mutable_transientpoint(int index) {
  // @@protoc_insertion_point(field_mutable:Results.transientPoint)
  return transientpoint_.Mutable(index);
}
::TransientPoint* Results::add_transientpoint() {
  // @@protoc_insertion_point(field_add:Results.transientPoint)
  return transientpoint_.Add();
}
::google::protobuf::RepeatedPtrField< ::TransientPoint >*
Results::mutable_transientpoint() {
  // @@protoc_insertion_point(field_mutable_list:Results.transientPoint)
  return &transientpoint_;
}
const ::google::protobuf::RepeatedPtrField< ::TransientPoint >&
Results::transientpoint() const {
  // @@protoc_insertion_point(field_list:Results.transientPoint)
  return transientpoint_;
}

// repeated .FrequencyPoint frequencyPoint = 2;
int Results::frequencypoint_size() const {
  return frequencypoint_.size();
}
void Results::clear_frequencypoint() {
  frequencypoint_.Clear();
}
const ::FrequencyPoint& Results::frequencypoint(int index) const {
  // @@protoc_insertion_point(field_get:Results.frequencyPoint)
  return frequencypoint_.Get(index);
}
::FrequencyPoint* Results::mutable_frequencypoint(int index) {
  // @@protoc_insertion_point(field_mutable:Results.frequencyPoint)
  return frequencypoint_.Mutable(index);
}
::FrequencyPoint* Results::add_frequencypoint() {
  // @@protoc_insertion_point(field_add:Results.frequencyPoint)
  return frequencypoint_.Add();
}
::google::protobuf::RepeatedPtrField< ::FrequencyPoint >*
Results::mutable_frequencypoint() {
  // @@protoc_insertion_point(field_mutable_list:Results.frequencyPoint)
  return &frequencypoint_;
}
const ::google::protobuf::RepeatedPtrField< ::FrequencyPoint >&
Results::frequencypoint() const {
  // @@protoc_insertion_point(field_list:Results.frequencyPoint)
  return frequencypoint_;
}

inline const Results* Results::internal_default_instance() {
  return &Results_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
