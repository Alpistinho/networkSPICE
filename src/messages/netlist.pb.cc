// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netlist.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "netlist.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ConfigurationLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfigurationLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* Netlist_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Netlist_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SimulationType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_netlist_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_netlist_2eproto() {
  protobuf_AddDesc_netlist_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "netlist.proto");
  GOOGLE_CHECK(file != NULL);
  ConfigurationLine_descriptor_ = file->message_type(0);
  static const int ConfigurationLine_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationLine, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationLine, begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationLine, end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationLine, points_),
  };
  ConfigurationLine_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConfigurationLine_descriptor_,
      ConfigurationLine::internal_default_instance(),
      ConfigurationLine_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConfigurationLine),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationLine, _internal_metadata_));
  Netlist_descriptor_ = file->message_type(1);
  static const int Netlist_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Netlist, component_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Netlist, config_),
  };
  Netlist_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Netlist_descriptor_,
      Netlist::internal_default_instance(),
      Netlist_offsets_,
      -1,
      -1,
      -1,
      sizeof(Netlist),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Netlist, _internal_metadata_));
  SimulationType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_netlist_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConfigurationLine_descriptor_, ConfigurationLine::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Netlist_descriptor_, Netlist::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_netlist_2eproto() {
  ConfigurationLine_default_instance_.Shutdown();
  delete ConfigurationLine_reflection_;
  Netlist_default_instance_.Shutdown();
  delete Netlist_reflection_;
}

void protobuf_InitDefaults_netlist_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_component_2eproto();
  ConfigurationLine_default_instance_.DefaultConstruct();
  Netlist_default_instance_.DefaultConstruct();
  ConfigurationLine_default_instance_.get_mutable()->InitAsDefaultInstance();
  Netlist_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_netlist_2eproto_once_);
void protobuf_InitDefaults_netlist_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_netlist_2eproto_once_,
                 &protobuf_InitDefaults_netlist_2eproto_impl);
}
void protobuf_AddDesc_netlist_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_netlist_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rnetlist.proto\032\017component.proto\"^\n\021Conf"
    "igurationLine\022\035\n\004type\030\001 \001(\0162\017.Simulation"
    "Type\022\r\n\005begin\030\002 \001(\001\022\013\n\003end\030\003 \001(\001\022\016\n\006poin"
    "ts\030\004 \001(\003\"L\n\007Netlist\022\035\n\tcomponent\030\001 \003(\0132\n"
    ".Component\022\"\n\006config\030\002 \001(\0132\022.Configurati"
    "onLine*.\n\016SimulationType\022\r\n\tFrequency\020\000\022"
    "\r\n\tTransient\020\001b\006proto3", 262);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "netlist.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_component_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_netlist_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_netlist_2eproto_once_);
void protobuf_AddDesc_netlist_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_netlist_2eproto_once_,
                 &protobuf_AddDesc_netlist_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_netlist_2eproto {
  StaticDescriptorInitializer_netlist_2eproto() {
    protobuf_AddDesc_netlist_2eproto();
  }
} static_descriptor_initializer_netlist_2eproto_;
const ::google::protobuf::EnumDescriptor* SimulationType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SimulationType_descriptor_;
}
bool SimulationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigurationLine::kTypeFieldNumber;
const int ConfigurationLine::kBeginFieldNumber;
const int ConfigurationLine::kEndFieldNumber;
const int ConfigurationLine::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigurationLine::ConfigurationLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_netlist_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigurationLine)
}

void ConfigurationLine::InitAsDefaultInstance() {
}

ConfigurationLine::ConfigurationLine(const ConfigurationLine& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ConfigurationLine)
}

void ConfigurationLine::SharedCtor() {
  ::memset(&begin_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&begin_) + sizeof(type_));
  _cached_size_ = 0;
}

ConfigurationLine::~ConfigurationLine() {
  // @@protoc_insertion_point(destructor:ConfigurationLine)
  SharedDtor();
}

void ConfigurationLine::SharedDtor() {
}

void ConfigurationLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigurationLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigurationLine_descriptor_;
}

const ConfigurationLine& ConfigurationLine::default_instance() {
  protobuf_InitDefaults_netlist_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ConfigurationLine> ConfigurationLine_default_instance_;

ConfigurationLine* ConfigurationLine::New(::google::protobuf::Arena* arena) const {
  ConfigurationLine* n = new ConfigurationLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigurationLine::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigurationLine)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ConfigurationLine, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ConfigurationLine*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(begin_, type_);

#undef ZR_HELPER_
#undef ZR_

}

bool ConfigurationLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigurationLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SimulationType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::SimulationType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_begin;
        break;
      }

      // optional double begin = 2;
      case 2: {
        if (tag == 17) {
         parse_begin:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &begin_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_end;
        break;
      }

      // optional double end = 3;
      case 3: {
        if (tag == 25) {
         parse_end:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_points;
        break;
      }

      // optional int64 points = 4;
      case 4: {
        if (tag == 32) {
         parse_points:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &points_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigurationLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigurationLine)
  return false;
#undef DO_
}

void ConfigurationLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigurationLine)
  // optional .SimulationType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional double begin = 2;
  if (this->begin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->begin(), output);
  }

  // optional double end = 3;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->end(), output);
  }

  // optional int64 points = 4;
  if (this->points() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->points(), output);
  }

  // @@protoc_insertion_point(serialize_end:ConfigurationLine)
}

::google::protobuf::uint8* ConfigurationLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ConfigurationLine)
  // optional .SimulationType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional double begin = 2;
  if (this->begin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->begin(), target);
  }

  // optional double end = 3;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->end(), target);
  }

  // optional int64 points = 4;
  if (this->points() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->points(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ConfigurationLine)
  return target;
}

size_t ConfigurationLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigurationLine)
  size_t total_size = 0;

  // optional .SimulationType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional double begin = 2;
  if (this->begin() != 0) {
    total_size += 1 + 8;
  }

  // optional double end = 3;
  if (this->end() != 0) {
    total_size += 1 + 8;
  }

  // optional int64 points = 4;
  if (this->points() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->points());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigurationLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConfigurationLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConfigurationLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigurationLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConfigurationLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConfigurationLine)
    UnsafeMergeFrom(*source);
  }
}

void ConfigurationLine::MergeFrom(const ConfigurationLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigurationLine)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ConfigurationLine::UnsafeMergeFrom(const ConfigurationLine& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.begin() != 0) {
    set_begin(from.begin());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.points() != 0) {
    set_points(from.points());
  }
}

void ConfigurationLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConfigurationLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigurationLine::CopyFrom(const ConfigurationLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigurationLine)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ConfigurationLine::IsInitialized() const {

  return true;
}

void ConfigurationLine::Swap(ConfigurationLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigurationLine::InternalSwap(ConfigurationLine* other) {
  std::swap(type_, other->type_);
  std::swap(begin_, other->begin_);
  std::swap(end_, other->end_);
  std::swap(points_, other->points_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigurationLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfigurationLine_descriptor_;
  metadata.reflection = ConfigurationLine_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigurationLine

// optional .SimulationType type = 1;
void ConfigurationLine::clear_type() {
  type_ = 0;
}
::SimulationType ConfigurationLine::type() const {
  // @@protoc_insertion_point(field_get:ConfigurationLine.type)
  return static_cast< ::SimulationType >(type_);
}
void ConfigurationLine::set_type(::SimulationType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ConfigurationLine.type)
}

// optional double begin = 2;
void ConfigurationLine::clear_begin() {
  begin_ = 0;
}
double ConfigurationLine::begin() const {
  // @@protoc_insertion_point(field_get:ConfigurationLine.begin)
  return begin_;
}
void ConfigurationLine::set_begin(double value) {
  
  begin_ = value;
  // @@protoc_insertion_point(field_set:ConfigurationLine.begin)
}

// optional double end = 3;
void ConfigurationLine::clear_end() {
  end_ = 0;
}
double ConfigurationLine::end() const {
  // @@protoc_insertion_point(field_get:ConfigurationLine.end)
  return end_;
}
void ConfigurationLine::set_end(double value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:ConfigurationLine.end)
}

// optional int64 points = 4;
void ConfigurationLine::clear_points() {
  points_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ConfigurationLine::points() const {
  // @@protoc_insertion_point(field_get:ConfigurationLine.points)
  return points_;
}
void ConfigurationLine::set_points(::google::protobuf::int64 value) {
  
  points_ = value;
  // @@protoc_insertion_point(field_set:ConfigurationLine.points)
}

inline const ConfigurationLine* ConfigurationLine::internal_default_instance() {
  return &ConfigurationLine_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Netlist::kComponentFieldNumber;
const int Netlist::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Netlist::Netlist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_netlist_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Netlist)
}

void Netlist::InitAsDefaultInstance() {
  config_ = const_cast< ::ConfigurationLine*>(
      ::ConfigurationLine::internal_default_instance());
}

Netlist::Netlist(const Netlist& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Netlist)
}

void Netlist::SharedCtor() {
  config_ = NULL;
  _cached_size_ = 0;
}

Netlist::~Netlist() {
  // @@protoc_insertion_point(destructor:Netlist)
  SharedDtor();
}

void Netlist::SharedDtor() {
  if (this != &Netlist_default_instance_.get()) {
    delete config_;
  }
}

void Netlist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Netlist::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Netlist_descriptor_;
}

const Netlist& Netlist::default_instance() {
  protobuf_InitDefaults_netlist_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Netlist> Netlist_default_instance_;

Netlist* Netlist::New(::google::protobuf::Arena* arena) const {
  Netlist* n = new Netlist;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Netlist::Clear() {
// @@protoc_insertion_point(message_clear_start:Netlist)
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
  component_.Clear();
}

bool Netlist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Netlist)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Component component = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_component:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_component()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_component;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_config;
        break;
      }

      // optional .ConfigurationLine config = 2;
      case 2: {
        if (tag == 18) {
         parse_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Netlist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Netlist)
  return false;
#undef DO_
}

void Netlist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Netlist)
  // repeated .Component component = 1;
  for (unsigned int i = 0, n = this->component_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->component(i), output);
  }

  // optional .ConfigurationLine config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  // @@protoc_insertion_point(serialize_end:Netlist)
}

::google::protobuf::uint8* Netlist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Netlist)
  // repeated .Component component = 1;
  for (unsigned int i = 0, n = this->component_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->component(i), false, target);
  }

  // optional .ConfigurationLine config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->config_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Netlist)
  return target;
}

size_t Netlist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Netlist)
  size_t total_size = 0;

  // optional .ConfigurationLine config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->config_);
  }

  // repeated .Component component = 1;
  {
    unsigned int count = this->component_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->component(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Netlist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Netlist)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Netlist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Netlist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Netlist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Netlist)
    UnsafeMergeFrom(*source);
  }
}

void Netlist::MergeFrom(const Netlist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Netlist)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Netlist::UnsafeMergeFrom(const Netlist& from) {
  GOOGLE_DCHECK(&from != this);
  component_.MergeFrom(from.component_);
  if (from.has_config()) {
    mutable_config()->::ConfigurationLine::MergeFrom(from.config());
  }
}

void Netlist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Netlist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Netlist::CopyFrom(const Netlist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Netlist)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Netlist::IsInitialized() const {

  return true;
}

void Netlist::Swap(Netlist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Netlist::InternalSwap(Netlist* other) {
  component_.UnsafeArenaSwap(&other->component_);
  std::swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Netlist::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Netlist_descriptor_;
  metadata.reflection = Netlist_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Netlist

// repeated .Component component = 1;
int Netlist::component_size() const {
  return component_.size();
}
void Netlist::clear_component() {
  component_.Clear();
}
const ::Component& Netlist::component(int index) const {
  // @@protoc_insertion_point(field_get:Netlist.component)
  return component_.Get(index);
}
::Component* Netlist::mutable_component(int index) {
  // @@protoc_insertion_point(field_mutable:Netlist.component)
  return component_.Mutable(index);
}
::Component* Netlist::add_component() {
  // @@protoc_insertion_point(field_add:Netlist.component)
  return component_.Add();
}
::google::protobuf::RepeatedPtrField< ::Component >*
Netlist::mutable_component() {
  // @@protoc_insertion_point(field_mutable_list:Netlist.component)
  return &component_;
}
const ::google::protobuf::RepeatedPtrField< ::Component >&
Netlist::component() const {
  // @@protoc_insertion_point(field_list:Netlist.component)
  return component_;
}

// optional .ConfigurationLine config = 2;
bool Netlist::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
void Netlist::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
const ::ConfigurationLine& Netlist::config() const {
  // @@protoc_insertion_point(field_get:Netlist.config)
  return config_ != NULL ? *config_
                         : *::ConfigurationLine::internal_default_instance();
}
::ConfigurationLine* Netlist::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::ConfigurationLine;
  }
  // @@protoc_insertion_point(field_mutable:Netlist.config)
  return config_;
}
::ConfigurationLine* Netlist::release_config() {
  // @@protoc_insertion_point(field_release:Netlist.config)
  
  ::ConfigurationLine* temp = config_;
  config_ = NULL;
  return temp;
}
void Netlist::set_allocated_config(::ConfigurationLine* config) {
  delete config_;
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Netlist.config)
}

inline const Netlist* Netlist::internal_default_instance() {
  return &Netlist_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
