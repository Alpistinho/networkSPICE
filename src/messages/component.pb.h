// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component.proto

#ifndef PROTOBUF_component_2eproto__INCLUDED
#define PROTOBUF_component_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_component_2eproto();
void protobuf_InitDefaults_component_2eproto();
void protobuf_AssignDesc_component_2eproto();
void protobuf_ShutdownFile_component_2eproto();

class Component;

enum ComponentType {
  Resistor = 0,
  Capacitor = 1,
  Inductor = 2,
  ComponentType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ComponentType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ComponentType_IsValid(int value);
const ComponentType ComponentType_MIN = Resistor;
const ComponentType ComponentType_MAX = Inductor;
const int ComponentType_ARRAYSIZE = ComponentType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ComponentType_descriptor();
inline const ::std::string& ComponentType_Name(ComponentType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ComponentType_descriptor(), value);
}
inline bool ComponentType_Parse(
    const ::std::string& name, ComponentType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ComponentType>(
    ComponentType_descriptor(), name, value);
}
// ===================================================================

class Component : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Component) */ {
 public:
  Component();
  virtual ~Component();

  Component(const Component& from);

  inline Component& operator=(const Component& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Component& default_instance();

  static const Component* internal_default_instance();

  void Swap(Component* other);

  // implements Message ----------------------------------------------

  inline Component* New() const { return New(NULL); }

  Component* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Component& from);
  void MergeFrom(const Component& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Component* other);
  void UnsafeMergeFrom(const Component& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ComponentType componentType = 1;
  void clear_componenttype();
  static const int kComponentTypeFieldNumber = 1;
  ::ComponentType componenttype() const;
  void set_componenttype(::ComponentType value);

  // repeated int32 nodes = 2;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 2;
  ::google::protobuf::int32 nodes(int index) const;
  void set_nodes(int index, ::google::protobuf::int32 value);
  void add_nodes(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nodes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nodes();

  // repeated float values = 3;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  float values(int index) const;
  void set_values(int index, float value);
  void add_values(float value);
  const ::google::protobuf::RepeatedField< float >&
      values() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_values();

  // repeated float tolerances = 4;
  int tolerances_size() const;
  void clear_tolerances();
  static const int kTolerancesFieldNumber = 4;
  float tolerances(int index) const;
  void set_tolerances(int index, float value);
  void add_tolerances(float value);
  const ::google::protobuf::RepeatedField< float >&
      tolerances() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_tolerances();

  // @@protoc_insertion_point(class_scope:Component)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nodes_;
  mutable int _nodes_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > values_;
  mutable int _values_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > tolerances_;
  mutable int _tolerances_cached_byte_size_;
  int componenttype_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_component_2eproto_impl();
  friend void  protobuf_AddDesc_component_2eproto_impl();
  friend void protobuf_AssignDesc_component_2eproto();
  friend void protobuf_ShutdownFile_component_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Component> Component_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Component

// optional .ComponentType componentType = 1;
inline void Component::clear_componenttype() {
  componenttype_ = 0;
}
inline ::ComponentType Component::componenttype() const {
  // @@protoc_insertion_point(field_get:Component.componentType)
  return static_cast< ::ComponentType >(componenttype_);
}
inline void Component::set_componenttype(::ComponentType value) {
  
  componenttype_ = value;
  // @@protoc_insertion_point(field_set:Component.componentType)
}

// repeated int32 nodes = 2;
inline int Component::nodes_size() const {
  return nodes_.size();
}
inline void Component::clear_nodes() {
  nodes_.Clear();
}
inline ::google::protobuf::int32 Component::nodes(int index) const {
  // @@protoc_insertion_point(field_get:Component.nodes)
  return nodes_.Get(index);
}
inline void Component::set_nodes(int index, ::google::protobuf::int32 value) {
  nodes_.Set(index, value);
  // @@protoc_insertion_point(field_set:Component.nodes)
}
inline void Component::add_nodes(::google::protobuf::int32 value) {
  nodes_.Add(value);
  // @@protoc_insertion_point(field_add:Component.nodes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Component::nodes() const {
  // @@protoc_insertion_point(field_list:Component.nodes)
  return nodes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Component::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:Component.nodes)
  return &nodes_;
}

// repeated float values = 3;
inline int Component::values_size() const {
  return values_.size();
}
inline void Component::clear_values() {
  values_.Clear();
}
inline float Component::values(int index) const {
  // @@protoc_insertion_point(field_get:Component.values)
  return values_.Get(index);
}
inline void Component::set_values(int index, float value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:Component.values)
}
inline void Component::add_values(float value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:Component.values)
}
inline const ::google::protobuf::RepeatedField< float >&
Component::values() const {
  // @@protoc_insertion_point(field_list:Component.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< float >*
Component::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:Component.values)
  return &values_;
}

// repeated float tolerances = 4;
inline int Component::tolerances_size() const {
  return tolerances_.size();
}
inline void Component::clear_tolerances() {
  tolerances_.Clear();
}
inline float Component::tolerances(int index) const {
  // @@protoc_insertion_point(field_get:Component.tolerances)
  return tolerances_.Get(index);
}
inline void Component::set_tolerances(int index, float value) {
  tolerances_.Set(index, value);
  // @@protoc_insertion_point(field_set:Component.tolerances)
}
inline void Component::add_tolerances(float value) {
  tolerances_.Add(value);
  // @@protoc_insertion_point(field_add:Component.tolerances)
}
inline const ::google::protobuf::RepeatedField< float >&
Component::tolerances() const {
  // @@protoc_insertion_point(field_list:Component.tolerances)
  return tolerances_;
}
inline ::google::protobuf::RepeatedField< float >*
Component::mutable_tolerances() {
  // @@protoc_insertion_point(field_mutable_list:Component.tolerances)
  return &tolerances_;
}

inline const Component* Component::internal_default_instance() {
  return &Component_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ComponentType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ComponentType>() {
  return ::ComponentType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_component_2eproto__INCLUDED
